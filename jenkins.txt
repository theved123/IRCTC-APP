pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                // Clone the code from GitHub
                git 'https://github.com/sagapg/IRCTC-APP.git'
                // Build the Docker image with the Dockerfile in the repository
                sh 'docker build -t pipeline1-project1:latest .'
                // Run unit tests for the code in the Docker container
                sh 'docker run pipeline1-project1:latest npm test'
            }
        }
        stage('Push') {
            steps {
                // Login to AWS ECR
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', accessKeyVariable: 'AKIAQ2C75UT3WAYCG3O3', credentialsId: 'sagar1', secretKeyVariable: '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']]) {
                    sh 'aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 056035747063.dkr.ecr.us-west-2.amazonaws.com'
                }
                // Tag the Docker image with the build version
                sh 'docker tag pipeline1-project1:latest 056035747063.dkr.ecr.us-west-2.amazonaws.com/pipeline1-project1:latest'
                // Push the Docker image to AWS ECR
                sh 'docker push 056035747063.dkr.ecr.us-west-2.amazonaws.com/pipeline1-project1:latest'
            }
        }
        stage('Deploy') {
            steps {
                // SSH into the EC2 machine and pull the latest Docker image from ECR
                sshagent(['web-app.pem']) {
                    sh 'ssh -o StrictHostKeyChecking=no ec2-user@35-163-78-229 "sudo docker pull 056035747063.dkr.ecr.us-west-2.amazonaws.com/pipeline1-project1:latest"'
                    // Start the Docker container on the EC2 machine
                    sh 'ssh -o StrictHostKeyChecking=no ec2-user@35-163-78-229 "sudo docker run -d --restart=always -p 80:8080 056035747063.dkr.ecr.us-west-2.amazonaws.com/pipeline1-project1:latest"'
                }
            }
        }
    }
}

